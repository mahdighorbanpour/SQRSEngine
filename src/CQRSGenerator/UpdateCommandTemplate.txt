<#namespaces#>

namespace <#codeGenerateion_namespace#>.<#EntitySet#>.Commands.Update<#Entity#>
{
    public class <#ClassName#> : IRequest
    {
        <#Properties#>

        public class <#ClassName#>Handler : IRequestHandler<<#ClassName#>>
        {
            private readonly <#dbContext_interface#> _context;

            public <#ClassName#>Handler(<#dbContext_interface#> context)
            {
                _context = context;
            }

            public async Task<Unit> Handle(<#ClassName#> request, CancellationToken cancellationToken)
            {
                var entity = await _context.<#EntitySet#>.FindAsync(request.Id);

                if (entity == null)
                {
                    throw new NotFoundException(nameof(<#Entity#>), request.Id);
                }

                <#PropertiesAssigments#>

                await _context.SaveChangesAsync(cancellationToken);

                return Unit.Value;
            }
        }
    }
}
