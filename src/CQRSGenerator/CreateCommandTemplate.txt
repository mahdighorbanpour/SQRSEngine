<#namespaces#>

namespace <#codeGenerateion_namespace#>.<#EntitySet#>.Commands.Create<#Entity#>
{
    public class <#ClassName#> : IRequest<<#returnType#>>
    {
        <#Properties#>

        public class <#ClassName#>Handler : IRequestHandler<<#ClassName#>, <#returnType#>>
        {
            private readonly <#dbContext_interface#> _context;

            public <#ClassName#>Handler(<#dbContext_interface#> context)
            {
                _context = context;
            }

            public async Task<<#returnType#>> Handle(<#ClassName#> request, CancellationToken cancellationToken)
            {
                var entity = new <#Entity#>()
                {
                    <#PropertiesAssigments#>
                };

                _context.<#EntitySet#>.Add(entity);

                await _context.SaveChangesAsync(cancellationToken);

                return entity.Id;
            }
        }
    }
}
